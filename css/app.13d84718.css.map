{"version":3,"sources":["webpack:///src/src/App.vue","webpack:///src/components/src/components/HelloWorld.vue","webpack:///src/components/src/components/Gallary.vue"],"names":[],"mappings":"AAmIA,KACA,gBAAA,CACA,qBACA,CAKA,EACA,qBACA,CAEA,GACA,cACA,CAEA,GACA,cAAA,CACA,QAAA,CACA,QAAA,CACA,SACA,CAEA,QACA,UACA,CAEA,MACA,qBACA,CAEA,MACA,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,YAAA,CACA,WAAA,CACA,cACA,CAEA,oCACA,MACA,WAAA,CACA,qBACA,CACA,CAEA,YACA,eAAA,CACA,eACA,CAEA,QACA,cACA,CAGA,MACA,gBAAA,CACA,wBACA,CAEA,YACA,wBAAA,CACA,gCACA,CAOA,0CACA,gBAAA,CACA,wBACA,CAEA,GACA,kCACA,CAEA,EACA,cAEA,CAEA,KACA,oEAAA,CACA,kCAAA,CACA,iCAAA,CACA,iBAAA,CACA,aACA,CAEA,EACA,cACA,CAEA,KACA,eAAA,CACA,cAAA,CACA,UAAA,CACA,KAAA,CACA,MAAA,CACA,YAAA,CACA,kCACA,CAEA,oCACA,KACA,YACA,CACA,CAEA,OACA,aAAA,CACA,eAAA,CACA,aAAA,CACA,uBAAA,CACA,SACA,CAOA,0BAEA,mBACA,CAEA,gCACA,aACA,CACA,OACA,UAAA,CACA,eACA,CACA,MACA,YACA,CACA,KACA,YACA,CACA,MACA,eAAA,CACA,SAAA,CACA,UACA,CACA,SACA,iBAAA,CACA,SACA,CAEA,KACA,UACA,CAEA,OACA,cACA,CAEA,oCACA,0BACA,sBACA,CACA,CAEA,oCACA,uBACA,sBACA,CACA,CAEA,oCAQA,uCACA,YACA,CACA,KACA,UACA,CACA,CAEA,GACA,cAAA,CACA,iBACA,CCpEA,wBACA,eAAA,CACA,WAAA,CACA,YAAA,CACA,cAAA,CACA,UAAA,CACA,KAAA,CACA,MAAA,CACA,qBACA,CAEA,uBACA,sBAAA,CACA,qBACA,CAEA,oBACA,aACA,CACA,mBACA,aAAA,CACA,eAAA,CACA,gBACA,CACA,qBACA,WAAA,CACA,cAAA,CACA,UACA,CACA,oBACA,eACA,CACA,oBACA,oBAAA,CACA,SACA,CACA,oBACA,oBAAA,CACA,aACA,CAKA,8CACA,aACA,CAEA,0BACA,cAAA,CACA,aAAA,CACA,QAAA,CACA,iBAAA,CACA,YAAA,CACA,aACA,CAEA,2BAKA,UAAA,CACA,sBAAA,CAAA,iBAAA,CACA,kBAAA,CACA,YAAA,CACA,4BAAA,CACA,QACA,CAEA,uDAZA,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,cAgBA,CAPA,4BACA,WAAA,CAKA,SACA,CAEA,wBACA,WAAA,CACA,WAAA,CAEA,SACA,CAEA,iCACA,cAAA,CACA,KAAA,CACA,MAAA,CACA,WAAA,CACA,YAAA,CACA,qBAAA,CACA,YAAA,CACA,YAAA,CACA,sBAAA,CACA,kBACA,CAEA,yBACA,UAAA,CACA,eAAA,CACA,iBACA,CAEA,+BACA,UAAA,CACA,sCAAA,CACA,oBACA,CAEA,4BACA,GAAA,UAAA,CACA,IAAA,WAAA,CACA,IAAA,YAAA,CACA,IAAA,aAAA,CACA,CAEA,yBACA,0BACA,cACA,CACA,sBACA,0BACA,CACA,4BACA,YACA,CACA,wBACA,YAAA,CACA,gBACA,CACA,CC5TA,oCACA,YAAA,CACA,kBACA,CAEA,oCACA,oCACA,qBACA,CACA,CAEA,0BACA,eAAA,CACA,eAAA,CACA,YAAA,CACA,qBAAA,CACA,kBACA,CAEA,wBAIA,qBAIA,CAEA,iDATA,cAAA,CACA,oBAAA,CACA,cAAA,CAEA,WAAA,CACA,iBAAA,CACA,UAWA,CARA,yBAIA,qBAIA,CAEA,yBACA,qBACA,CAEA,oBACA,cAAA,CACA,QAAA,CACA,OACA,CAEA,oBACA,iBAAA,CACA,qBAAA,CACA,kBACA,CAEA,uBACA,uBACA,CAEA,yBACA,WAAA,CACA,eACA,CAEA,mBACA,cACA,CAEA,2BACA,aACA,CAEA,wBACA,aACA,CAGA,oBACA,cAAA,CACA,iBACA,CAEA,oBACA,cACA","file":"app.13d84718.css","sourcesContent":["<template>\n  <div id=\"app\">\n    <!-- 主要內容區域，根據start狀態顯示，包含各種視覺效果class -->\n    <div id=\"main\" v-if=\"start\" :class=\"{'hue-rotate': rot, blur: blur, invert: iv}\">\n      <!-- 導航欄，可切換深色模式 -->\n      <div id=\"nav\" :class=\"{dark:dark}\">\n        <!-- 頂部大圖輪播 -->\n        <!--<img class=\"big\" :src=\"'./img/'+name[idx]\">-->\n        <!-- 導航連結區域 -->\n        <router-link class=\"large-font\" to=\"/\"><img class=\"small\">留圖板</router-link> \n        <!--\n        <router-link to=\"/contact\"><img id=\"info\" class=\"small\" src=\"./assets/info.png\" alt=\"聯絡資訊\"></router-link>\n        <router-link to=\"/project\"><img class=\"small\" src=\"./assets/works.png\" alt=\"作品集\"></router-link> -->\n        \n       \n        <!--<router-link class=\"large-font\" to=\"/drawing\" v-show=\"in_dyo()\">塗鴉+</router-link>\n        <router-link class=\"large-font\" to=\"/dyo_photo\" v-show=\"in_dyo()\">照片+</router-link>\n        <router-link class=\"large-font\" to=\"/dyo_text\" v-show=\"in_dyo()\">文字+</router-link>-->\n\n        <router-link class=\"large-font\" to=\"/dyo\" >投稿→</router-link>\n\n        <router-link class=\"large-font\" to=\"/gallary\" v-show=\"in_dyo()\">相簿→\n        </router-link>\n\n        \n        <!--<router-link to=\"/gallary\" v-show=\"!in_dyo()\"><img id=\"gallary\" class=\"big\" src=\"./assets/gallary.png\" alt=\"相簿\"></router-link>-->\n        <!--<router-link to=\"/shop\"><img id=\"shop\" class=\"small\" src=\"./assets/shop.png\" alt=\"商店\"></router-link>-->\n        <a @click=\"reset()\" v-show=\"!in_dyo()\">\n          <!-- 不同效果狀態下顯示的圖示 -->\n          <img class=\"big\" v-show=\"!blur && !dark && !iv && !rot\" src=\"./assets/eyes.png\">\n          <img class=\"big\" v-show=\"!blur && dark && !iv && !rot\" src=\"./assets/bw.png\">\n          <img class=\"big\" v-show=\"!blur && !dark && !iv && rot\" src=\"./assets/rotate.png\">\n          <img class=\"big\" v-show=\"blur && !dark && !iv && !rot\" src=\"./assets/bl.png\">\n          <img class=\"big\" v-show=\"!blur && !dark && iv && !rot\" src=\"./assets/iv.png\">\n        </a>\n      </div>\n      <!-- 視覺效果切換按鈕區域 -->\n        \n      <!-- 路由視圖區域 -->\n      <router-view :dark=\"dark\" :pets=\"pets\"/>\n    </div>\n    <!-- 效果選擇介面 -->\n    <div class=\"flex\" v-else>\n      <!-- 各種視覺效果選項 -->\n      <h3>視覺模式：</h3>\n      <a @click=\"normal()\" @mouseover= \"focus='normal'\"><img class=\"small\" title=\"normal\" src=\"./assets/normal.png\"><span class=\"l\" v-show=\"focus == 'normal'\"><br/>一般</span></a>\n      <a @click=\"bw()\" @mouseover=\"focus='bw'\"><img class=\"small\" title=\"grayscale\" src=\"./assets/bw.png\"><span class=\"l\" v-show=\"focus == 'bw'\"><br/>灰階</span></a>\n      <a @click=\"rotate()\" @mouseover=\"focus='rotate'\"><img class=\"small\" title=\"rotate\" src=\"./assets/rotate.png\"><span class=\"l\" v-show=\"focus == 'rotate'\"><br/>旋轉</span></a>\n      <a @click=\"bl()\" @mouseover=\"focus='bl'\"><img class=\"small\" title=\"blur\" src=\"./assets/bl.png\"><span class=\"l\" v-show=\"focus == 'bl'\"><br/>模糊</span></a>\n      <a @click=\"invert()\" @mouseover=\"focus='invert'\"><img class=\"small\" title=\"invert\" src=\"./assets/iv.png\"><span class=\"l\" v-show=\"focus == 'invert'\"><br/>反轉</span></a>\n    </div>\n  </div>\n</template>\n\n<script type=\"text/javascript\">\n\nexport default {\n  name: 'App',\n  data() {\n    return {\n      dark: false,      // 深色模式開關\n      name: ['cjh.png','jh.png'],  // 輪播圖片名稱陣列\n      idx: 0,           // 當前顯示圖片索引\n      rot: false,       // 色相旋轉效果開關\n      blur: false,      // 模糊效果開關\n      start: true,      // 是否顯示主畫面\n      iv: false,        // 反轉效果開關\n      focus: 'iv',  // 當前聚焦的效果選項\n      pets: [           // 商品資料陣列\n        { i: 1, n: '01', price: 1800, src: './img/rug/t01.jpeg', \n        imgs: ['./img/rug/t01.jpeg','./img/rug/t02.jpeg', './img/rug/t03.jpeg', './img/rug/t04.jpeg', './img/rug/t05.jpeg', './img/rug/t06.jpg'] },\n        { i: 2, n: '02', price: 200, src: './img/sticker/s01.jpeg', \n        imgs: ['./img/sticker/s01.jpeg','./img/sticker/s02.jpeg', './img/sticker/s03.jpeg', './img/sticker/s04.jpeg', './img/sticker/s05.jpeg', './img/sticker/s06.jpg'] },\n        { i: 3, n: '03', price: 117, src: './img/glass/g01.jpeg', \n        imgs: ['./img/glass/g01.jpeg','./img/glass/g02.jpeg', './img/glass/g03.jpeg', './img/glass/g04.jpeg', './img/glass/g05.jpeg', './img/glass/g06.jpeg'] },\n      ]\n    }\n  },\n  methods: {\n    in_dyo() {\n      return this.$route.path === '/dyo' ||\n       this.$route.path === '/dyo_photo' || \n       this.$route.path === '/dyo_text' || \n       this.$route.path === '/drawing' ||\n       this.$route.path === '/gallary'\n    },\n    change() {\n      this.idx++\n      if (this.idx == 2) {\n        this.idx = 0\n      }\n    },\n    reset() {\n      this.blur = false;\n      this.dark = false;\n      this.rot = false;\n      this.start = false;\n      this.iv = false;\n    },\n    normal() {\n      this.start = true\n    },\n    bw() {\n      this.dark = true\n      this.start = true\n    },\n    rotate() {\n      this.rot = true\n      this.start = true\n    },\n    bl() {\n      this.blur = true\n      this.start = true\n    },\n    invert() {\n      this.iv = true\n      this.start = true\n    }\n  },\n  mounted() {\n    console.log(this.$router.currentRoute.path)\n    if (this.$router.currentRoute.path == '/gallary') {\n      this.start = true;\n    }\n    setInterval(this.change, 1500)\n  }\n}\n</script>\n\n<style>\n\nbody {\n  cursor: crosshair;\n  background-color: #000;\n}\n\n.hello {\n}\n\na {\n  cursor: cell !important; \n}\n\n.l {\n  font-size: 16px;\n}\n\n#d {\n  position: fixed;\n  top: 85vh;\n  left: 1em;\n  z-index: 9;\n}\n\n#d.dark {\n  color: white;\n}\n\n#main {\n  background-color: #000;\n}\n\n.flex {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  width: 100vw;\n  font-size: 28px;\n}\n\n@media screen and (max-width: 600px) {\n  .flex {\n    height: auto;\n    flex-direction: column;\n  }\n}\n\n.large-font {\n  font-size: 1.2em;\n  line-height: 2em;\n}\n\n.flex a {\n  margin: 1em 2em;\n}\n\n\n.blur {\n  filter:blur(3px);\n  -webkit-filter:blur(3px);\n}\n\n.hue-rotate {\n  filter:hue-rotate(90deg);\n  -webkit-filter:hue-rotate(90deg);\n}\n\n.invert {\n  filter:invert(1);\n  -webkit-filter:invert(1);\n}\n\n.invert img.small, .invert img.big {\n  filter:invert(1);\n  -webkit-filter:invert(1);\n}\n\nh1 {\n font-family: \"Courier New\", \"LiSong Pro\";\n}\n\np {\n  font-size: 0.9em;\n\n}\n\n#app {\n  font-family: \"Courier New\", \"LiSong Pro\", Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\n\na {\n  cursor: pointer;\n}\n\n#nav {\n  text-align: left;\n  position: fixed;\n  z-index: 10;\n  top:0;\n  left:0;\n  padding: 30px;\n  background-color: rgb(110, 252, 40) !important; /* 這行之後可以拿掉 */\n}\n\n@media screen and (max-width: 600px) {\n  #nav {\n    padding: 10px;\n  }\n}\n\n#nav a {\n  display: block;\n  font-weight: bold;\n  color: #2c3e50;\n  font-family: \"Courier New\";\n  padding: 0;\n}\n\n#nav.dark img {\n  -webkit-filter: invert(100%);\n  filter: invert(100%);\n}\n\n#d.dark img {\n  -webkit-filter: invert(100%);\n  filter: invert(100%);\n}\n\n#nav a.router-link-exact-active {\n  color: #F5B041;\n}\n.small{\n  height: 2em;\n  margin-top: -1em;\n}\n#info{\n  height: 1.6em;\n}\n#dyo{\n  height: 2.3em;\n}\n#shop{\n  padding-top: 1em;\n  width: 50%;\n  height: 3em;\n}\n#gallary{\n  position: relative;\n  left: -2em;\n}\n\n.big{\n  height: 3em;\n}\n\nbutton {\n  font-size: 26px;\n}\n\n@media screen and (min-width: 751px) {\n  #cst.thin-only, .thin-only {\n    display: none !important;\n  }\n}\n\n@media screen and (max-width: 750px) {\n  #cs.fat-only, .fat-only {\n    display: none !important;\n  }\n}\n\n@media screen and (max-width: 420px) {\n\n  .small{\n    height: 1.6em;\n  }\n  #info{\n    height: 1.6em;\n  }\n  #dyo, #dyo_photo, #dyo_text {\n    height: 1.6em;\n  }\n  .big{\n    height: 2em;\n  }\n}\n\nh3 {\n  margin-top: 1em;\n  margin-bottom: 2em;\n}\n\n\n</style>\n","<template>\n  <div class=\"hello\" :class=\"{dark:dark}\">\n\n    <div class=\"loading-screen\" v-if=\"loadingmillisecs < 3000\">\n      <div class=\"loader\">Loading...</div>\n    </div>\n\n    <div class=\"text-box\" v-for=\"(item, i) in texts\" :key=\"item.id\" :style=\"{left: left_text_array[i] + 'px', top: top_text_array[i] + 'px'}\">\n      <p class=\"my-text\">{{ item.content }}</p>\n    </div>\n\n    <a v-for=\"(item, i) in items.slice(0, n)\" :key=\"item.src\" @click=\"use(item)\">\n      <img class=\"img\" :src=\"item.src\" :style=\"{left: left_array[i] + 'px', top: top_array[i] + 'px'}\">\n    </a>\n\n    <div class=\"photo-box\" v-for=\"(item, i) in photos.slice(0, n)\" :key=\"item.id\" :style=\"{left: left_photo_array[i] + 'px', top: top_photo_array[i] + 'px'}\">\n      <img class=\"photo\" :src=\"item.src\">\n    </div>\n\n    <!-- \n    <a @click=\"use(items[idx] && items[idx].src || items[idx])\">\n      <img :src=\"items[idx] && items[idx].src || items[idx]\" :style=\"{left: left + 'px', top: top + 'px'}\">\n    </a> -->\n\n  </div>\n</template>\n\n<script>\n  import { db } from '../db';\n\nexport default {\n  name: 'HelloWorld',\n  // 元件接收的屬性\n  props: {\n    msg: String,\n    dark: Boolean,\n  },\n  // Firestore 數據綁定\n  firestore: {\n    items: db.collection('img'),\n    texts: db.collection('text'),\n    photos: db.collection('photo'),\n  },\n  methods: {\n    // 使用選中��圖片並導航到繪圖頁面\n    use(s) {\n      localStorage.src = s;\n      this.$router.push('/drawing')\n    },\n    // 切換到下一張圖片\n    next() {\n      this.idx = Number(this.idx) + 1\n      if (this.idx >= this.items.length) {\n        this.idx = 0\n      }\n      localStorage.idx = this.idx\n    },\n    next_text() {\n      this.idx_text = Number(this.idx_text) + 1\n      if (this.idx_text >= this.texts.length) {\n        this.idx_text = 0\n      }\n      localStorage.idx_text = this.idx_text\n    },\n    next_photo() {\n      this.idx_photo = Number(this.idx_photo) + 1\n      if (this.idx_photo >= this.photos.length) {\n        this.idx_photo = 0\n      }\n      localStorage.idx_photo = this.idx_photo\n    },\n    // 控制圖片移動的方法\n    \n    move_all() {\n\n      this.left_array = this.left_array.map((item, i) => item + 1 * this.dir1_array[i])\n      this.top_array = this.top_array.map((item, i) => item + 1 * this.dir2_array[i])\n\n      this.left_text_array = this.left_text_array.map((item, i) => {\n        const newPosition = item + this.dir1_text_array[i]\n        \n        if (!this.texts[i]) return newPosition\n        \n        // 計算文字寬度\n        const font_size = window.innerWidth <= 768 ? 14 : 18\n        const textWidth = this.texts[i].content.length * font_size * 1.5\n        \n        // 當文���完全移出左側時\n        if (newPosition < -textWidth) {\n          // 檢查是否所有文字都已移出畫面\n          const allTextsMoved = this.left_text_array.every((pos, idx) => {\n            if (!this.texts[idx]) return true\n            const width = this.texts[idx].content.length * font_size * 1.5\n            return pos < -width\n          })\n          \n          // 如果所有文字都已移出畫面，則重置所有文字位置\n          if (allTextsMoved) {\n            return window.innerWidth + (i * 500)\n          }\n          \n          // 否則保持在畫面外\n          return newPosition\n        }\n        \n        return newPosition\n      })\n\n      this.top_text_array = this.top_text_array.map((item, i) => item + 1 * this.dir2_text_array[i])\n\n      this.left_photo_array = this.left_photo_array.map((item, i) => item + 1 * this.dir1_photo_array[i])\n      this.top_photo_array = this.top_photo_array.map((item, i) => item + 1 * this.dir2_photo_array[i])\n\n      // 當圖片碰到左右邊界時\n      const vmin = Math.min(window.innerWidth, window.innerHeight) / 100;\n      const imgWidth = window.innerWidth <= 768 ? (15 * vmin) : 250;\n      \n      for (let i = 0; i < this.left_array.length; i++) {\n        if(this.left_array[i] >= window.innerWidth - imgWidth || this.left_array[i] <= 0) {\n          this.dir1_array[i]  *= -1             // 改變水平移動方向\n        } \n      }\n\n      for (let i = 0; i < this.top_array.length; i++) {\n        // 當圖片碰到上下邊界時\n        if(this.top_array[i] == window.innerHeight - 200 || this.top_array[i] == 0) {\n          this.dir2_array[i] *= -1            // 改變垂直移動方向\n          this.next()                // 切換下一張圖片\n        }\n      }\n\n      // 當照片碰到左右邊界時\n      const photoWidth = window.innerWidth <= 768 ? 15 * vmin : 150;\n\n      for (let i = 0; i < this.left_photo_array.length; i++) {\n        if(this.left_photo_array[i] >= window.innerWidth - photoWidth || this.left_photo_array[i] <= 0) {\n          this.dir1_photo_array[i] *= -1\n          this.next_photo()\n        }\n      }\n\n      for (let i = 0; i < this.top_photo_array.length; i++) {\n        // 獲取當前照片元素\n        const photoElement = document.querySelectorAll('.photo')[i];\n        if (!photoElement) continue;\n        \n        // 等待圖片載入成後再取得實際高度\n        if (!photoElement.complete) {\n          photoElement.onload = () => {\n            const photoBox = photoElement.parentElement;\n            if (photoBox) {\n              photoBox.style.height = photoElement.offsetHeight + 'px';\n            }\n          }\n        } else {\n          const photoBox = photoElement.parentElement;\n          if (photoBox) {\n            photoBox.style.height = photoElement.offsetHeight + 'px';\n          }\n        }\n        \n        const photoHeight = photoElement.offsetHeight;\n        if(this.top_photo_array[i] >= window.innerHeight - photoHeight || this.top_photo_array[i] <= 0) {\n          this.dir2_photo_array[i] *= -1;\n          this.next_photo();\n        }\n      }\n    }\n  },\n  watch: { // 監聽 photos 的變化\n    photos: function(newVal) {\n      console.log(newVal)\n      this.left_photo_array = new Array(newVal.length).fill(0).map(() => \n        Math.floor(Math.random() * (window.innerWidth - 300)))\n      this.top_photo_array = new Array(newVal.length).fill(0).map(() => \n        Math.floor(Math.random() * (window.innerHeight - 200)))\n      this.dir1_photo_array = new Array(newVal.length).fill(0).map(() => \n        Math.random() < 0.5 ? 1 : -1)\n      this.dir2_photo_array = new Array(newVal.length).fill(0).map(() => \n        Math.random() < 0.5 ? 1 : -1)\n    }, // 監聽 items 的變化\n    items: function(newVal) {\n      console.log(newVal)\n      this.left_array = new Array(newVal.length).fill(0).map(() => \n        Math.floor(Math.random() * (window.innerWidth - 300)))\n      this.top_array = new Array(newVal.length).fill(0).map(() => \n        Math.floor(Math.random() * (window.innerHeight - 200)))\n      this.dir1_array = new Array(newVal.length).fill(0).map(() => \n        Math.random() < 0.5 ? 1 : -1)\n      this.dir2_array = new Array(newVal.length).fill(0).map(() => \n        Math.random() < 0.5 ? 1 : -1)\n    }, // 監聽 texts 的變化\n    texts: function(newVal) {\n      console.log(newVal)\n      this.left_text_array = new Array(newVal.length).fill(0).map((_, i) => {\n        return window.innerWidth + (i * 500)\n      })\n      this.top_text_array = new Array(newVal.length).fill(0).map(() => \n        window.innerHeight - 100)\n      this.dir1_text_array = new Array(newVal.length).fill(-1)\n      this.dir2_text_array = new Array(newVal.length).fill(0)\n    }\n  },\n  // 元件掛載時啟動移動動畫\n  mounted() {\n    if (localStorage.idx) {\n      this.idx = localStorage.idx\n    }\n    setInterval(this.move_all, 15)     // 每15毫秒執行一次move方法\n    setInterval(() => {\n      this.n = this.n + 5\n    }, 500)\n    setInterval(() => {\n      this.loadingmillisecs = this.loadingmillisecs + 1000\n    }, 1000)\n  },\n  // 元件的數據\n  data() {\n    return {\n      loadingmillisecs: 0,\n      n: 5,\n      left_array: [0, 0, 0, 0, 0, 0, 0, 0],\n      top_array: [0, 0, 0, 0, 0, 0, 0, 0],\n      dir1_array: [1, 1, 1, 1, 1, 1, 1, 1],\n      dir2_array: [1, 1, 1, 1, 1, 1, 1, 1],\n      left_photo_array: [0, 0, 0, 0, 0, 0, 0, 0],\n      top_photo_array: [0, 0, 0, 0, 0, 0, 0, 0],\n      dir1_photo_array: [1, 1, 1, 1, 1, 1, 1, 1],\n      dir2_photo_array: [1, 1, 1, 1, 1, 1, 1, 1],\n      left: 0,\n      top: 0,\n      dir: 1,\n      dir2: 1,\n      idx: 0,\n      idx_text: 0,\n      texts: [],\n      photos: [],\n      items: ['https://jungleft.github.io/jungho//img/c48c4fa8b906854d6327b27f30b1d24ca_4620693218563810026_210127_0.jpg', \n      'https://jungleft.github.io/jungho/img/c48c4fa8b906854d6327b27f30b1d24ca_4620693218563810026_210127_1.jpg', \n      'https://jungleft.github.io/jungho/img/c48c4fa8b906854d6327b27f30b1d24ca_4620693218563810026_210127_2.jpg', \n      'https://jungleft.github.io/jungho/img/c48c4fa8b906854d6327b27f30b1d24ca_4620693218563810026_210127_3.jpg', \n      'https://jungleft.github.io/jungho/img/c48c4fa8b906854d6327b27f30b1d24ca_4620693218563810026_210127_4.jpg', \n      'https://jungleft.github.io/jungho/img/c48c4fa8b906854d6327b27f30b1d24ca_4620693218563810026_210127_5.jpg', \n      'https://jungleft.github.io/jungho/img/c48c4fa8b906854d6327b27f30b1d24ca_4620693218563810026_210127_6.jpg', \n      'https://jungleft.github.io/jungho/img/c48c4fa8b906854d6327b27f30b1d24ca_4620693218563810026_210127_7.jpg'],\n      top_text_array: [0, 0, 0, 0, 0, 0, 0, 0],\n      dir1_text_array: [1, 1, 1, 1, 1, 1, 1, 1],\n      dir2_text_array: [1, 1, 1, 1, 1, 1, 1, 1],\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\n\n.hello {\n  padding-top: 2em;\n  width: 100vw;\n  height: 100vh;\n  position: fixed;\n  z-index: -1;\n  top: 0;\n  left: 0;\n  background-color: #000;\n}\n\n.dark {\n  filter: grayscale(100%);\n  background-color: #000;\n}\n\nh1 {\n  color: #EAC257;\n}\np {\n  color: #9CDA68;\n  margin-top: 25em;\n  margin-left: 50em;\n}\nimg {\n  width: 250px;\n  position: fixed;\n  z-index: -9;\n}\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #229954;\n}\n\na:visited {\n  color: #229954;\n}\n\n.my-text {\n  font-size: 18px;\n  color: #229954;\n  margin: 0;\n  text-align: center;\n  margin-top: 0;\n  margin-left: 0;\n}\n\n.text-box {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  z-index: 12;\n  width: fit-content;\n  white-space: nowrap;\n  padding: 10px;\n  background-color: rgba(0, 0, 0, 0);\n  margin: 0;\n}\n\n.photo-box {\n  width: 150px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  z-index: 6;\n}\n\n.photo {\n  width: 150px;\n  height: auto;\n  /*border-radius: 50%;*/\n  opacity: 1; /* 設定圖片不透明度為1 */\n}\n\n.loading-screen {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 1);\n  z-index: 1000;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.loader {\n  color: #fff;\n  font-size: 1.2em;\n  position: relative;\n}\n\n.loader:after {\n  content: '';\n  animation: loading 1s infinite;\n  display: inline-block;\n}\n\n@keyframes loading {\n  0% { content: ''; }\n  25% { content: '.'; }\n  50% { content: '..'; }\n  75% { content: '...'; }\n}\n\n@media (max-width: 768px) {\n  .my-text {\n    font-size: 14px;\n  }\n  .img {\n    max-width: 15vmin !important;\n  }\n  .photo-box {\n    width: 15vmin;\n  }\n  .photo {\n    width: 15vmin;\n    max-width: 15vmin;\n  }\n}\n</style>\n","<template>\n  <div class=\"gallary-container\">\n    <div class=\"gallary\">\n      <h2>sketch</h2>\n      <div class = \"block\" v-for=\"(t) in test\" :key=\"t.src\">\n        <a @click=\"use(t.src)\"><img class =\"g\" :src=\"t.src\"/></a>\n      </div>\n      <div>\n        <h3>\n          <!--<router-link to=\"/drawing\">Back</router-link>-->\n      </h3>\n      </div>\n    </div>\n    <div class=\"gallary\">\n      <h2>photo</h2>\n      <div class = \"block\" v-for=\"(t) in photo\" :key=\"t.src\">\n        <img class =\"g\" :src=\"t.src\"/>\n      </div>\n    </div>\n    <div class=\"gallary\">\n      <h2>text</h2>\n      <div class = \"block\" v-for=\"(t) in text\" :key=\"t.content\">\n        <div class = \"g padded gold\">{{ t.content }}</div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\nimport { db } from '../db';\n\nexport default {\n  name: 'HelloWorld',\n  props: {\n    msg: String,\n  },\n  metaInfo: {\n    title: '畫廊',\n  },\n  firestore: {\n    test: db.collection('img'),\n    text: db.collection('text'),\n    photo: db.collection('photo'),\n  },\n  methods: {\n    use(s) {\n      localStorage.src = s;\n      this.$router.push('/drawing')\n    }\n  },\n  mounted() {\n  },\n  data() {\n    return {\n      text: null,\n      test: null,\n      photo: null,\n      message: 'Hello Vue!',\n      vueCanvas: null,\n      painting: false,\n      canvas: null,\n      ctx: null,\n      color: '#000000',\n    };\n  },\n};\n\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\n.gallary-container {\n  display: flex;\n  flex-direction: row;\n}\n\n@media screen and (max-width: 600px) {\n  .gallary-container {\n    flex-direction: column;\n  }\n}\n\n.gallary {\n  max-width: 800px;\n  margin: 4em auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\na#save {\n  cursor: pointer;\n  display: inline-block;\n  font-size: 18px;\n  background-color: #3f3;\n  padding: 3px;\n  border-radius: 5px;\n  color: black;\n}\n\na#clear {\n  cursor: pointer;\n  display: inline-block;\n  font-size: 18px;\n  background-color: yellow;\n  padding: 3px;\n  border-radius: 5px;\n  color: black;\n}\n\n#canvas {\n    border: 3px solid black;\n}\n\n#c {\n  position: fixed;\n  bottom: 0;\n  right: 0;\n}\n\n.g {\n  max-height: 20vmin;\n  border: 3px gold ridge;\n  border-radius: 15px;\n}\n\n.gold {\n  color: rgb(41, 3, 154) !important;\n}\n\n.padded {\n  padding: 1em;\n  font-size: 1.5em;\n}\n\na {\n  cursor: pointer;\n}\n\na:visited {\n  color: #AF601A;\n}\n\n.block {\n  display: block;\n}\n\n\nh2 {\n  margin-top: 2em;\n  margin-bottom: 2em;\n}\n\nh3 {\n  margin-top: 2em;\n}\n</style>\n"]}